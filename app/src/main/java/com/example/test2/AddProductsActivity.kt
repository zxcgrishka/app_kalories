package com.example.test2

import android.content.Intent
import android.net.Uri
import android.os.Bundle
import android.widget.Toast
import androidx.activity.result.contract.ActivityResultContracts
import androidx.appcompat.app.AppCompatActivity
import androidx.lifecycle.asLiveData
import com.example.test2.databinding.ActivityAddProductsBinding
import com.example.test2.network.NetworkModule
import com.example.test2.network.NutritionixRepository
import com.example.test2.utils.CameraActivity
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import kotlinx.coroutines.withContext

class AddProductsActivity : AppCompatActivity() {
    private lateinit var binding: ActivityAddProductsBinding

    // Nutritionix —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    private val nutritionixRepository by lazy {
        NutritionixRepository(NetworkModule.provideNutritionixService())
    }

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ—Ç –∫–∞–º–µ—Ä—ã
    private val cameraLauncher = registerForActivityResult(
        ActivityResultContracts.StartActivityForResult()
    ) { result ->
        if (result.resultCode == RESULT_OK) {
            val photoUri = result.data?.getStringExtra("photo_uri")
            photoUri?.let { uriString ->
                processPhotoWithNutritionix(uriString)
                Toast.makeText(this, "–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º...", Toast.LENGTH_SHORT).show()
            }
        } else {
            Toast.makeText(this, "–°—ä–µ–º–∫–∞ —Ñ–æ—Ç–æ –æ—Ç–º–µ–Ω–µ–Ω–∞", Toast.LENGTH_SHORT).show()
        }
    }

    // —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏
    private val galleryLauncher = registerForActivityResult(
        ActivityResultContracts.GetContent()
    ) { uri: Uri? ->
        uri?.let {
            processPhotoWithNutritionix(it.toString())
            Toast.makeText(this, "–§–æ—Ç–æ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–æ", Toast.LENGTH_SHORT).show()
        }
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityAddProductsBinding.inflate(layoutInflater)
        setContentView(binding.root)

        val db = MainDb.getDb(this)

        // –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ —Å–ø–∏—Å–∫–æ–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        db.tempProductDebugDao().getAllProducts1().asLiveData().observe(this) { products ->
            binding.tvList.text = ""
            products.forEach { product ->
                val text = "Id: ${product.id} Name: ${product.ProductName} " +
                        "Calories: ${product.ProductCalories} " +
                        "Proteins: ${product.ProductProteins} " +
                        "Fats: ${product.ProductFats} " +
                        "Carbohydrates: ${product.ProductCarbohydrates}\n"
                binding.tvList.append(text)
            }
        }

        // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ –≤—Ä—É—á–Ω—É—é
        binding.button2.setOnClickListener {
            addProductManually(db)
        }

        // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–∞–º–µ—Ä—ã
        binding.btnOpenCamera?.setOnClickListener {
            openCamera()
        }

        // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏
        binding.btnOpenGallery?.setOnClickListener {
            openGallery()
        }

        // –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞ –≤ Nutritionix
        binding.btnTextSearch?.setOnClickListener {
            showTextSearchDialog()
        }
    }

    private fun addProductManually(db: MainDb) {
        try {
            val product = Product(
                null,
                binding.edName?.text?.toString() ?: "",
                binding.edKalories.text.toString().toIntOrNull() ?: 0,
                binding.edProteins?.text?.toString()?.toIntOrNull() ?: 0,
                binding.edFats?.text?.toString()?.toIntOrNull() ?: 0,
                binding.edCarbohydrates?.text?.toString()?.toIntOrNull() ?: 0
            )

            if (product.ProductName.isBlank()) {
                Toast.makeText(this, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞", Toast.LENGTH_SHORT).show()
                return
            }

            Thread {
                db.tempProductDebugDao().insertProduct(product)
            }.start()

            clearInputFields()
            Toast.makeText(this, "–ü—Ä–æ–¥—É–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω", Toast.LENGTH_SHORT).show()

        } catch (e: Exception) {
            Toast.makeText(this, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞: ${e.message}", Toast.LENGTH_SHORT).show()
        }
    }

    private fun openCamera() {
        val intent = Intent(this, CameraActivity::class.java)
        cameraLauncher.launch(intent)
    }

    private fun openGallery() {
        galleryLauncher.launch("image/*")
    }

    private fun processPhotoWithNutritionix(photoUri: String) {
        showLoading(true)

        CoroutineScope(Dispatchers.IO).launch {
            try {
                val uri = Uri.parse(photoUri)

                val result = nutritionixRepository.recognizeFoodFromImage(uri, this@AddProductsActivity)

                withContext(Dispatchers.Main) {
                    showLoading(false)

                    when {
                        result.isSuccess -> {
                            val foods = result.getOrNull()
                            if (foods.isNullOrEmpty()) {
                                showManualInputFallback("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç –Ω–∞ —Ñ–æ—Ç–æ")
                            } else {
                                showFoodSelectionDialog(foods)
                            }
                        }
                        result.isFailure -> {
                            val error = result.exceptionOrNull()
                            if (error?.message?.contains("API error: 404") == true) {
                                showManualInputFallback("–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ Nutritionix")
                            } else {
                                showErrorFallback("–û—à–∏–±–∫–∞ API: ${error?.message}")
                            }
                        }
                    }
                }

            } catch (e: Exception) {
                withContext(Dispatchers.Main) {
                    showLoading(false)
                    showErrorFallback("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${e.message}")
                }
            }
        }
    }

    private fun showTextSearchDialog() {
        val input = android.widget.EditText(this)
        input.hint = "–ù–∞–ø—Ä–∏–º–µ—Ä: —è–±–ª–æ–∫–æ, –∫—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞, –±–∞–Ω–∞–Ω"

        androidx.appcompat.app.AlertDialog.Builder(this)
            .setTitle("–ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–∞")
            .setMessage("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ Nutritionix:")
            .setView(input)
            .setPositiveButton("–ù–∞–π—Ç–∏") { dialog, _ ->
                val query = input.text.toString().trim()
                if (query.isNotBlank()) {
                    searchFoodByText(query)
                } else {
                    Toast.makeText(this, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞", Toast.LENGTH_SHORT).show()
                }
                dialog.dismiss()
            }
            .setNegativeButton("–û—Ç–º–µ–Ω–∞") { dialog, _ ->
                dialog.dismiss()
            }
            .show()
    }

    private fun searchFoodByText(query: String) {
        showLoading(true)

        CoroutineScope(Dispatchers.IO).launch {
            try {
                val result = nutritionixRepository.recognizeFoodFromText(query)

                withContext(Dispatchers.Main) {
                    showLoading(false)

                    when {
                        result.isSuccess -> {
                            val foods = result.getOrNull()
                            if (foods.isNullOrEmpty()) {
                                showManualInputFallback("–ü—Ä–æ–¥—É–∫—Ç '$query' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                            } else {
                                showFoodSelectionDialog(foods)
                            }
                        }
                        result.isFailure -> {
                            val error = result.exceptionOrNull()
                            showErrorFallback("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: ${error?.message}")
                        }
                    }
                }

            } catch (e: Exception) {
                withContext(Dispatchers.Main) {
                    showLoading(false)
                    showErrorFallback("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: ${e.message}")
                }
            }
        }
    }

    private fun showFoodSelectionDialog(foods: List<com.example.test2.network.NutritionixFood>) {
        val foodNames = foods.mapIndexed { index, food ->
            "${index + 1}. ${food.food_name} - ${food.nf_calories?.toInt() ?: 0} –∫–∫–∞–ª"
        }

        androidx.appcompat.app.AlertDialog.Builder(this)
            .setTitle("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç")
            .setItems(foodNames.toTypedArray()) { dialog, which ->
                val selectedFood = foods[which]
                fillFieldsWithNutritionixData(selectedFood)
                dialog.dismiss()
            }
            .setNegativeButton("–û—Ç–º–µ–Ω–∞") { dialog, _ ->
                dialog.dismiss()
            }
            .setNeutralButton("–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏") { dialog, _ ->
                dialog.dismiss()
                showFoodDetailsDialog(foods)
            }
            .show()
    }

    private fun showFoodDetailsDialog(foods: List<com.example.test2.network.NutritionixFood>) {
        val foodDetails = foods.joinToString("\n\n") { food ->
            """
            üçΩ ${food.food_name}
            üî• –ö–∞–ª–æ—Ä–∏–∏: ${food.nf_calories?.toInt() ?: 0} –∫–∫–∞–ª
            üí™ –ë–µ–ª–∫–∏: ${food.nf_protein?.toInt() ?: 0}–≥
            ü•ë –ñ–∏—Ä—ã: ${food.nf_total_fat?.toInt() ?: 0}–≥
            üçö –£–≥–ª–µ–≤–æ–¥—ã: ${food.nf_total_carbohydrate?.toInt() ?: 0}–≥
            üìè –ü–æ—Ä—Ü–∏—è: ${food.serving_qty ?: 1} ${food.serving_unit ?: "—à—Ç"}
            """.trimIndent()
        }

        androidx.appcompat.app.AlertDialog.Builder(this)
            .setTitle("–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã")
            .setMessage(foodDetails)
            .setPositiveButton("–í—ã–±—Ä–∞—Ç—å –ø–µ—Ä–≤—ã–π") { dialog, _ ->
                fillFieldsWithNutritionixData(foods.first())
                dialog.dismiss()
            }
            .setNegativeButton("–ó–∞–∫—Ä—ã—Ç—å") { dialog, _ ->
                dialog.dismiss()
            }
            .show()
    }

    private fun fillFieldsWithNutritionixData(food: com.example.test2.network.NutritionixFood) {
        binding.edName?.setText(food.food_name)
        binding.edKalories.setText((food.nf_calories?.toInt() ?: 0).toString())
        binding.edProteins?.setText((food.nf_protein?.toInt() ?: 0).toString())
        binding.edFats?.setText((food.nf_total_fat?.toInt() ?: 0).toString())
        binding.edCarbohydrates?.setText((food.nf_total_carbohydrate?.toInt() ?: 0).toString())

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Ä—Ü–∏–∏
        val servingInfo = if (food.serving_qty != null && food.serving_unit != null) {
            " (${food.serving_qty} ${food.serving_unit})"
        } else {
            ""
        }

        Toast.makeText(
            this,
            "–î–∞–Ω–Ω—ã–µ '${food.food_name}'$servingInfo –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ Nutritionix",
            Toast.LENGTH_LONG
        ).show()
    }

    private fun showLoading(show: Boolean) {
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å ProgressBar –≤ layout
        if (show) {
            Toast.makeText(this, "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º...", Toast.LENGTH_SHORT).show()
        }
    }

    private fun showErrorFallback(errorMessage: String) {
        Toast.makeText(this, errorMessage, Toast.LENGTH_LONG).show()

        androidx.appcompat.app.AlertDialog.Builder(this)
            .setTitle("–û—à–∏–±–∫–∞")
            .setMessage("$errorMessage\n–•–æ—Ç–∏—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é?")
            .setPositiveButton("–í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é") { dialog, _ ->
                dialog.dismiss()
                binding.edName?.requestFocus()
            }
            .setNegativeButton("–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞") { dialog, _ ->
                dialog.dismiss()
                openCamera()
            }
            .setNeutralButton("–¢–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫") { dialog, _ ->
                dialog.dismiss()
                showTextSearchDialog()
            }
            .show()
    }

    private fun showManualInputFallback(message: String) {
        androidx.appcompat.app.AlertDialog.Builder(this)
            .setTitle("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
            .setMessage("$message\n–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫")
            .setPositiveButton("–í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é") { dialog, _ ->
                dialog.dismiss()
                binding.edName?.requestFocus()
            }
            .setNegativeButton("–¢–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫") { dialog, _ ->
                dialog.dismiss()
                showTextSearchDialog()
            }
            .setNeutralButton("–°–Ω—è—Ç—å —Å–Ω–æ–≤–∞") { dialog, _ ->
                dialog.dismiss()
                openCamera()
            }
            .show()
    }

    private fun clearInputFields() {
        binding.edName?.setText("")
        binding.edKalories.setText("")
        binding.edProteins?.setText("")
        binding.edFats?.setText("")
        binding.edCarbohydrates?.setText("")
    }
}